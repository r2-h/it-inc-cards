{"version":3,"file":"pagination.stories-b4c5801e.js","sources":["../../src/assets/keyboard_arrow_left.tsx","../../src/assets/keyboard_arrow_rigth.tsx","../../src/components/ui/pagination/usePagination.ts","../../src/components/ui/pagination/pagination.tsx"],"sourcesContent":["import { Ref, SVGProps, forwardRef, memo } from 'react'\r\nconst SvgComponent = (props: SVGProps<SVGSVGElement>, ref: Ref<SVGSVGElement>) => (\r\n  <svg\r\n    fill={'none'}\r\n    height={'100%'}\r\n    ref={ref}\r\n    viewBox={'0 0 24 24'}\r\n    width={'100%'}\r\n    xmlns={'http://www.w3.org/2000/svg'}\r\n    {...props}\r\n  >\r\n    <g clipPath={'url(#a)'}>\r\n      <path d={'M15.41 16.59 10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41Z'} fill={'currentColor'} />\r\n    </g>\r\n    <defs>\r\n      <clipPath id={'a'}>\r\n        <path d={'M0 0h24v24H0z'} fill={'#fff'} />\r\n      </clipPath>\r\n    </defs>\r\n  </svg>\r\n)\r\nconst ForwardRef = forwardRef(SvgComponent)\r\nconst ArrowLeft = memo(ForwardRef)\r\n\r\nexport default ArrowLeft\r\n","import { Ref, SVGProps, forwardRef, memo } from 'react'\r\nconst SvgComponent = (props: SVGProps<SVGSVGElement>, ref: Ref<SVGSVGElement>) => (\r\n  <svg\r\n    fill={'none'}\r\n    height={'100%'}\r\n    ref={ref}\r\n    viewBox={'0 0 24 24'}\r\n    width={'100%'}\r\n    xmlns={'http://www.w3.org/2000/svg'}\r\n    {...props}\r\n  >\r\n    <g clipPath={'url(#a)'}>\r\n      <path d={'M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41Z'} fill={'currentColor'} />\r\n    </g>\r\n    <defs>\r\n      <clipPath id={'a'}>\r\n        <path d={'M0 0h24v24H0z'} fill={'#fff'} />\r\n      </clipPath>\r\n    </defs>\r\n  </svg>\r\n)\r\nconst ForwardRef = forwardRef(SvgComponent)\r\nconst ArrowRigth = memo(ForwardRef)\r\n\r\nexport default ArrowRigth\r\n","import { useCallback, useMemo } from 'react'\r\n\r\ntype PaginationParamsType = {\r\n  currentPage: number\r\n  onChangePage: (page: number) => void\r\n  pageSize: number\r\n  totalCount: number\r\n}\r\n\r\nexport const usePagination = ({\r\n  currentPage,\r\n  onChangePage,\r\n  pageSize,\r\n  totalCount,\r\n}: PaginationParamsType) => {\r\n  const createPages = (start: number, stop: number) => {\r\n    const arrLength = stop - start + 1\r\n\r\n    return Array.from({ length: arrLength }, (_, i) => i + start)\r\n  }\r\n\r\n  const pages = useMemo(() => {\r\n    const DOTS = '\\u2026'\r\n    const siblingCount = 1\r\n    const totalPageCount = Math.ceil(totalCount / pageSize)\r\n    const totalPageNumbers: number = siblingCount + 5\r\n    /*Case 1:  less than totalPageNumbers */\r\n\r\n    if (totalPageNumbers >= totalPageCount) {\r\n      return createPages(1, totalPageCount)\r\n    }\r\n\r\n    const leftSiblingIndex = Math.max(currentPage - siblingCount, 1)\r\n    const rightSiblingIndex = Math.min(currentPage + siblingCount, totalPageCount)\r\n    const shouldShowLeftDots = leftSiblingIndex > 2\r\n    const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2\r\n    const firstPageIndex = 1\r\n    const lastPageIndex = totalPageCount\r\n    /* Case 2: show only right dots */\r\n\r\n    if (!shouldShowLeftDots && shouldShowRightDots) {\r\n      const leftRange = createPages(1, 5)\r\n\r\n      return [...leftRange, DOTS, totalPageCount]\r\n    }\r\n\r\n    /* Case 3: show only left dots */\r\n    if (shouldShowLeftDots && !shouldShowRightDots) {\r\n      const rightRange = createPages(totalPageCount - 4, totalPageCount)\r\n\r\n      return [firstPageIndex, DOTS, ...rightRange]\r\n    }\r\n\r\n    /* Case 4: show left & rigth dots */\r\n    if (shouldShowLeftDots && shouldShowRightDots) {\r\n      const middleRange = createPages(leftSiblingIndex, rightSiblingIndex)\r\n\r\n      return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex]\r\n    }\r\n\r\n    return []\r\n  }, [currentPage, pageSize, totalCount])\r\n\r\n  const nextPageHandler = useCallback(() => {\r\n    onChangePage(currentPage + 1)\r\n  }, [currentPage, onChangePage])\r\n\r\n  const prevPageHandler = useCallback(() => {\r\n    onChangePage(currentPage - 1)\r\n  }, [currentPage, onChangePage])\r\n\r\n  const isLastPage = currentPage === pages[pages.length - 1]\r\n  const isFirstPage = currentPage === 1\r\n  const onClickHandler = (page: number) => onChangePage(page)\r\n\r\n  return {\r\n    isFirstPage,\r\n    isLastPage,\r\n    nextPageHandler,\r\n    onClickHandler,\r\n    pages,\r\n    prevPageHandler,\r\n  }\r\n}\r\n","import ArrowLeft from '@/assets/keyboard_arrow_left'\r\nimport ArrowRigth from '@/assets/keyboard_arrow_rigth'\r\nimport { usePagination } from '@/components/ui/pagination/usePagination'\r\nimport { SelectDemo } from '@/components/ui/select'\r\nimport { Typography } from '@/components/ui/typography'\r\n\r\nimport s from './pagination.module.scss'\r\n\r\nconst options = [\r\n  { id: '10', value: '10' },\r\n  { id: '20', value: '20' },\r\n  { id: '30', value: '30' },\r\n  { id: '50', value: '50' },\r\n  { id: '100', value: '100' },\r\n]\r\n\r\nexport type PaginationPropsType = {\r\n  currentPage: number\r\n  onChangePage: (page: number) => void\r\n  onChangePageSize: (size: string) => void\r\n  pageSize: number\r\n  totalCount: number\r\n}\r\nexport const Pagination = ({\r\n  currentPage,\r\n  onChangePage,\r\n  onChangePageSize,\r\n  pageSize,\r\n  totalCount,\r\n}: PaginationPropsType) => {\r\n  const { isFirstPage, isLastPage, nextPageHandler, onClickHandler, pages, prevPageHandler } =\r\n    usePagination({\r\n      currentPage,\r\n      onChangePage,\r\n      pageSize,\r\n      totalCount,\r\n    })\r\n\r\n  return (\r\n    <div className={s.root}>\r\n      <div className={s.buttons_container}>\r\n        <button className={s.leftArrow} disabled={isFirstPage} onClick={prevPageHandler}>\r\n          <ArrowLeft />\r\n        </button>\r\n        {pages?.map((p, i) => {\r\n          switch (typeof p) {\r\n            case 'string': {\r\n              return (\r\n                <span className={s.dots} key={i}>\r\n                  {p}\r\n                </span>\r\n              )\r\n            }\r\n            default:\r\n              return (\r\n                <button\r\n                  className={s.page}\r\n                  disabled={currentPage === p}\r\n                  key={i}\r\n                  onClick={() => onClickHandler(p)}\r\n                >\r\n                  {p}\r\n                </button>\r\n              )\r\n          }\r\n        })}\r\n        <button className={s.rigthArrow} disabled={isLastPage} onClick={nextPageHandler}>\r\n          <ArrowRigth />\r\n        </button>\r\n      </div>\r\n      <div className={s.select_container}>\r\n        <Typography variant={'body2'}>Show</Typography>\r\n        <div>\r\n          <SelectDemo\r\n            className={s.select}\r\n            onChangeValue={onChangePageSize}\r\n            options={options}\r\n            value={`${pageSize}`}\r\n          />\r\n        </div>\r\n        <Typography variant={'body2'}>per page</Typography>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":["SvgComponent","props","ref","jsxs","jsx","ForwardRef","forwardRef","ArrowLeft","memo","ArrowRigth","usePagination","currentPage","onChangePage","pageSize","totalCount","createPages","start","stop","arrLength","_","i","pages","useMemo","DOTS","totalPageCount","leftSiblingIndex","rightSiblingIndex","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","rightRange","middleRange","nextPageHandler","useCallback","prevPageHandler","isLastPage","page","options","Pagination","onChangePageSize","isFirstPage","onClickHandler","s","p","Typography","SelectDemo"],"mappings":"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"}